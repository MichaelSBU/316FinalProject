{"ast":null,"code":"var _jsxFileName = \"/Users/mikeybudney/Desktop/CSE316FINALPROJECT/client/src/components/YoutubePlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport YouTube from 'react-youtube';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport FastForwardIcon from '@mui/icons-material/FastForward';\nimport FastRewindIcon from '@mui/icons-material/FastRewind';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport GlobalStoreContext from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function YouTubePlayer() {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  let p = null;\n  const [song, setSong] = useState({\n    title: \"CHOOSE A PLAYLIST\",\n    artist: \"CHOOSE A PLAYLIST\"\n  });\n\n  // THIS HAS THE YOUTUBE IDS FOR THE SONGS IN OUR CURRENTLY PLAYING PLAYLIST\n  let name = \"SELECT A PLAYLIST TO PLAY IT!\";\n  let playlist = [];\n  if (store.playingList !== null) {\n    name = playlist.name;\n    playlist = store.playingList.songs;\n  }\n\n  // THIS IS THE INDEX OF THE SONG CURRENTLY IN USE IN THE PLAYLIST\n  let currentSong = 0;\n  const playerOptions = {\n    height: '390',\n    width: '670',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n\n  // THIS FUNCTION LOADS THE CURRENT SONG INTO\n  // THE PLAYER AND PLAYS IT\n  function loadAndPlayCurrentSong(player) {\n    let song = playlist[currentSong].youTubeId;\n    player.loadVideoById(song);\n    player.playVideo();\n  }\n\n  // THIS FUNCTION INCREMENTS THE PLAYLIST SONG TO THE NEXT ONE\n  function incSong() {\n    currentSong++;\n    currentSong = currentSong % playlist.length;\n  }\n  function onPlayerReady(event) {\n    p = event.target;\n    loadAndPlayCurrentSong(event.target);\n    event.target.playVideo();\n  }\n\n  // THIS IS OUR EVENT HANDLER FOR WHEN THE YOUTUBE PLAYER'S STATE\n  // CHANGES. NOTE THAT playerStatus WILL HAVE A DIFFERENT INTEGER\n  // VALUE TO REPRESENT THE TYPE OF STATE CHANGE. A playerStatus\n  // VALUE OF 0 MEANS THE SONG PLAYING HAS ENDED.\n  function onPlayerStateChange(event) {\n    let playerStatus = event.data;\n    let player = event.target;\n    if (playerStatus === -1) {\n      // VIDEO UNSTARTED\n      console.log(\"-1 Video unstarted\");\n    } else if (playerStatus === 0) {\n      // THE VIDEO HAS COMPLETED PLAYING\n      console.log(\"0 Video ended\");\n      incSong();\n      loadAndPlayCurrentSong(player);\n    } else if (playerStatus === 1) {\n      // THE VIDEO IS PLAYED\n      console.log(\"1 Video played\");\n    } else if (playerStatus === 2) {\n      // THE VIDEO IS PAUSED\n      console.log(\"2 Video paused\");\n    } else if (playerStatus === 3) {\n      // THE VIDEO IS BUFFERING\n      console.log(\"3 Video buffering\");\n    } else if (playerStatus === 5) {\n      // THE VIDEO HAS BEEN CUED\n      console.log(\"5 Video cued\");\n    }\n  }\n  const handlePrevSong = () => {\n    currentSong = (playlist.length + currentSong - 1) % playlist.length;\n    loadAndPlayCurrentSong(p);\n  };\n  const handlePauseSong = () => {\n    console.log(\"Paused Video\");\n    p.pauseVideo();\n  };\n  const handlePlaySong = () => {\n    console.log(\"Play Video\");\n    p.playVideo();\n  };\n  const handleNextSong = () => {\n    currentSong = (currentSong + 1) % playlist.length;\n    loadAndPlayCurrentSong(p);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      transform: \"translate(0%,1%)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: undefined,\n      opts: playerOptions,\n      onReady: onPlayerReady,\n      onStateChange: onPlayerStateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        pb: 1.5,\n        transform: \"translate(0%, -3%)\",\n        height: \"100%\",\n        borderRadius: \"12px\",\n        border: 1,\n        bgcolor: \"#cdccff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: \"40%\",\n          fontSize: 25\n        },\n        children: \"Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: \"20px\",\n          fontSize: 25\n        },\n        children: \"Playlist: \" + name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: \"20px\",\n          fontSize: 25\n        },\n        children: \"Song #: \" + (currentSong + 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: \"20px\",\n          fontSize: 25\n        },\n        children: \"Title:   \" + song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: \"20px\",\n          fontSize: 25\n        },\n        children: \"Artist:   \" + song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          border: 2,\n          height: \"75px\",\n          borderColor: \"black\",\n          borderRadius: 5,\n          ml: \"3%\",\n          width: \"94%\",\n          bgcolor: \"white\",\n          fontSize: \"75px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FastRewindIcon, {\n          onClick: handlePrevSong,\n          sx: {\n            ml: \"30%\"\n          },\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(PauseIcon, {\n          onClick: handlePauseSong,\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n          onClick: handlePlaySong,\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(FastForwardIcon, {\n          onClick: handleNextSong,\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 12\n  }, this);\n}\n_s(YouTubePlayer, \"s6KofXeSzmLHcFSqrWYI8sOynFo=\");\n_c = YouTubePlayer;\nvar _c;\n$RefreshReg$(_c, \"YouTubePlayer\");","map":{"version":3,"names":["React","useContext","useState","YouTube","Box","Typography","FastForwardIcon","FastRewindIcon","PauseIcon","PlayArrowIcon","GlobalStoreContext","YouTubePlayer","store","p","song","setSong","title","artist","name","playlist","playingList","songs","currentSong","playerOptions","height","width","playerVars","autoplay","loadAndPlayCurrentSong","player","youTubeId","loadVideoById","playVideo","incSong","length","onPlayerReady","event","target","onPlayerStateChange","playerStatus","data","console","log","handlePrevSong","handlePauseSong","pauseVideo","handlePlaySong","handleNextSong","transform","undefined","pb","borderRadius","border","bgcolor","ml","fontSize","borderColor"],"sources":["/Users/mikeybudney/Desktop/CSE316FINALPROJECT/client/src/components/YoutubePlayer.js"],"sourcesContent":["import React, {useContext, useState} from 'react';\nimport YouTube from 'react-youtube';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport FastForwardIcon from '@mui/icons-material/FastForward';\nimport FastRewindIcon from '@mui/icons-material/FastRewind';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport GlobalStoreContext from '../store'\n\nexport default function YouTubePlayer() {\n    \n    const {store} = useContext(GlobalStoreContext);\n    let p = null;\n    \n    const [song, setSong] = useState({title: \"CHOOSE A PLAYLIST\", artist: \"CHOOSE A PLAYLIST\"});\n\n    // THIS HAS THE YOUTUBE IDS FOR THE SONGS IN OUR CURRENTLY PLAYING PLAYLIST\n    let name = \"SELECT A PLAYLIST TO PLAY IT!\"\n    let playlist = [];\n    if(store.playingList !== null){\n        name = playlist.name;\n        playlist = store.playingList.songs;\n    }\n\n    // THIS IS THE INDEX OF THE SONG CURRENTLY IN USE IN THE PLAYLIST\n    let currentSong = 0;\n\n    const playerOptions = {\n        height: '390',\n        width: '670',\n        playerVars: {\n            // https://developers.google.com/youtube/player_parameters\n            autoplay: 0,\n        },\n    };\n\n    // THIS FUNCTION LOADS THE CURRENT SONG INTO\n    // THE PLAYER AND PLAYS IT\n    function loadAndPlayCurrentSong(player) {\n        let song = playlist[currentSong].youTubeId;\n        player.loadVideoById(song);\n        player.playVideo();\n    }\n\n    // THIS FUNCTION INCREMENTS THE PLAYLIST SONG TO THE NEXT ONE\n    function incSong() {\n        currentSong++;\n        currentSong = currentSong % playlist.length;\n    }\n\n    function onPlayerReady(event) {\n        p = event.target;\n        loadAndPlayCurrentSong(event.target);\n        event.target.playVideo();\n    }\n\n    // THIS IS OUR EVENT HANDLER FOR WHEN THE YOUTUBE PLAYER'S STATE\n    // CHANGES. NOTE THAT playerStatus WILL HAVE A DIFFERENT INTEGER\n    // VALUE TO REPRESENT THE TYPE OF STATE CHANGE. A playerStatus\n    // VALUE OF 0 MEANS THE SONG PLAYING HAS ENDED.\n    function onPlayerStateChange(event) {\n        let playerStatus = event.data;\n        let player = event.target;\n        if (playerStatus === -1) {\n            // VIDEO UNSTARTED\n            console.log(\"-1 Video unstarted\");\n        } else if (playerStatus === 0) {\n            // THE VIDEO HAS COMPLETED PLAYING\n            console.log(\"0 Video ended\");\n            incSong();\n            loadAndPlayCurrentSong(player);\n        } else if (playerStatus === 1) {\n            // THE VIDEO IS PLAYED\n            console.log(\"1 Video played\");\n        } else if (playerStatus === 2) {\n            // THE VIDEO IS PAUSED\n            console.log(\"2 Video paused\");\n        } else if (playerStatus === 3) {\n            // THE VIDEO IS BUFFERING\n            console.log(\"3 Video buffering\");\n        } else if (playerStatus === 5) {\n            // THE VIDEO HAS BEEN CUED\n            console.log(\"5 Video cued\");\n        }\n    }\n\n    const handlePrevSong = () => {\n        currentSong = (playlist.length+currentSong-1) % playlist.length;\n        loadAndPlayCurrentSong(p);\n    }\n    const handlePauseSong = () => {\n        console.log(\"Paused Video\")\n        p.pauseVideo();\n    }\n    const handlePlaySong = () => {\n        console.log(\"Play Video\")\n        p.playVideo();\n    }\n    const handleNextSong = () => {\n        currentSong = (currentSong+1) % playlist.length;\n        loadAndPlayCurrentSong(p);\n    }\n\n    return <Box sx={{transform:\"translate(0%,1%)\"}}>\n    <YouTube videoId={undefined} opts={playerOptions} onReady={onPlayerReady} onStateChange={onPlayerStateChange}></YouTube>\n    <Box sx={{pb: 1.5, transform:\"translate(0%, -3%)\", height: \"100%\", borderRadius:\"12px\", border: 1,  bgcolor:\"#cdccff\"}}>\n                                    <Typography sx={{ml:\"40%\", fontSize:25}}>Now Playing</Typography>\n                                    <Typography sx={{ml:\"20px\", fontSize:25}}>{\"Playlist: \" + name}</Typography>\n                                    <Typography sx={{ml:\"20px\", fontSize:25}}>{\"Song #: \" + (currentSong+1)}</Typography>\n                                    <Typography sx={{ml:\"20px\", fontSize:25}}>{\"Title:   \" + song.title}</Typography>\n                                    <Typography sx={{ml:\"20px\", fontSize:25}}>{\"Artist:   \" + song.artist}</Typography>\n                                    <Box sx={{border:2, height:\"75px\", borderColor:\"black\", borderRadius:5, ml:\"3%\", width:\"94%\", bgcolor:\"white\", fontSize:\"75px\"}}>\n                                        <FastRewindIcon onClick={handlePrevSong} sx={{ml: \"30%\"}} fontSize=\"inherit\"></FastRewindIcon>\n                                        <PauseIcon onClick={handlePauseSong} fontSize=\"inherit\"></PauseIcon>\n                                        <PlayArrowIcon onClick={handlePlaySong} fontSize=\"inherit\"></PlayArrowIcon>\n                                        <FastForwardIcon onClick={handleNextSong} fontSize=\"inherit\"></FastForwardIcon>\n                                    </Box>\n                                    \n    </Box>\n    </Box>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}