{"ast":null,"code":"var _jsxFileName = \"/Users/mikeybudney/Desktop/CSE316FINALPROJECT/client/src/YouTubePlaylisterReact-main/src/PlaylisterYouTubePlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport YouTube from 'react-youtube';\nimport GlobalStoreContext from '../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function YouTubePlayerExample() {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  // THIS EXAMPLE DEMONSTRATES HOW TO DYNAMICALLY MAKE A\n  // YOUTUBE PLAYER AND EMBED IT IN YOUR SITE. IT ALSO\n  // DEMONSTRATES HOW TO IMPLEMENT A PLAYLIST THAT MOVES\n  // FROM ONE SONG TO THE NEXT\n\n  // THIS HAS THE YOUTUBE IDS FOR THE SONGS IN OUR PLAYLIST\n  let playlist = [];\n  if (store.currentList !== null) {\n    let songs = store.currentList.songs;\n    for (let i = 0; i < songs.length; i++) {\n      playlist.push(songs[i].youTubeId);\n    }\n  }\n\n  // THIS IS THE INDEX OF THE SONG CURRENTLY IN USE IN THE PLAYLIST\n  let currentSong = 0;\n  const playerOptions = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n\n  // THIS FUNCTION LOADS THE CURRENT SONG INTO\n  // THE PLAYER AND PLAYS IT\n  function loadAndPlayCurrentSong(player) {\n    let song = playlist[currentSong];\n    player.loadVideoById(song);\n    player.playVideo();\n  }\n\n  // THIS FUNCTION INCREMENTS THE PLAYLIST SONG TO THE NEXT ONE\n  function incSong() {\n    currentSong++;\n    currentSong = currentSong % playlist.length;\n  }\n  function onPlayerReady(event) {\n    loadAndPlayCurrentSong(event.target);\n    event.target.playVideo();\n  }\n\n  // THIS IS OUR EVENT HANDLER FOR WHEN THE YOUTUBE PLAYER'S STATE\n  // CHANGES. NOTE THAT playerStatus WILL HAVE A DIFFERENT INTEGER\n  // VALUE TO REPRESENT THE TYPE OF STATE CHANGE. A playerStatus\n  // VALUE OF 0 MEANS THE SONG PLAYING HAS ENDED.\n  function onPlayerStateChange(event) {\n    let playerStatus = event.data;\n    let player = event.target;\n    if (playerStatus === -1) {\n      // VIDEO UNSTARTED\n      console.log(\"-1 Video unstarted\");\n    } else if (playerStatus === 0) {\n      // THE VIDEO HAS COMPLETED PLAYING\n      console.log(\"0 Video ended\");\n      incSong();\n      loadAndPlayCurrentSong(player);\n    } else if (playerStatus === 1) {\n      // THE VIDEO IS PLAYED\n      console.log(\"1 Video played\");\n    } else if (playerStatus === 2) {\n      // THE VIDEO IS PAUSED\n      console.log(\"2 Video paused\");\n    } else if (playerStatus === 3) {\n      // THE VIDEO IS BUFFERING\n      console.log(\"3 Video buffering\");\n    } else if (playerStatus === 5) {\n      // THE VIDEO HAS BEEN CUED\n      console.log(\"5 Video cued\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(YouTube, {\n    videoId: playlist[currentSong],\n    opts: playerOptions,\n    onReady: onPlayerReady,\n    onStateChange: onPlayerStateChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 12\n  }, this);\n}\n_s(YouTubePlayerExample, \"73C7T2gc7osE0gOE4ApLm9/B7dk=\");\n_c = YouTubePlayerExample;\nvar _c;\n$RefreshReg$(_c, \"YouTubePlayerExample\");","map":{"version":3,"names":["React","useContext","YouTube","GlobalStoreContext","YouTubePlayerExample","store","playlist","currentList","songs","i","length","push","youTubeId","currentSong","playerOptions","height","width","playerVars","autoplay","loadAndPlayCurrentSong","player","song","loadVideoById","playVideo","incSong","onPlayerReady","event","target","onPlayerStateChange","playerStatus","data","console","log"],"sources":["/Users/mikeybudney/Desktop/CSE316FINALPROJECT/client/src/YouTubePlaylisterReact-main/src/PlaylisterYouTubePlayer.js"],"sourcesContent":["import React, {useContext} from 'react';\nimport YouTube from 'react-youtube';\nimport GlobalStoreContext from '../../store'\n\nexport default function YouTubePlayerExample() {\n    const { store } = useContext(GlobalStoreContext);\n    // THIS EXAMPLE DEMONSTRATES HOW TO DYNAMICALLY MAKE A\n    // YOUTUBE PLAYER AND EMBED IT IN YOUR SITE. IT ALSO\n    // DEMONSTRATES HOW TO IMPLEMENT A PLAYLIST THAT MOVES\n    // FROM ONE SONG TO THE NEXT\n\n    // THIS HAS THE YOUTUBE IDS FOR THE SONGS IN OUR PLAYLIST\n    let playlist = []\n    if(store.currentList !== null){\n        let songs = store.currentList.songs;\n        for(let i = 0; i < songs.length; i++){\n            playlist.push(songs[i].youTubeId);\n        }\n    }\n\n    // THIS IS THE INDEX OF THE SONG CURRENTLY IN USE IN THE PLAYLIST\n    let currentSong = 0;\n\n    const playerOptions = {\n        height: '390',\n        width: '640',\n        playerVars: {\n            // https://developers.google.com/youtube/player_parameters\n            autoplay: 0,\n        },\n    };\n\n    // THIS FUNCTION LOADS THE CURRENT SONG INTO\n    // THE PLAYER AND PLAYS IT\n    function loadAndPlayCurrentSong(player) {\n        let song = playlist[currentSong];\n        player.loadVideoById(song);\n        player.playVideo();\n    }\n\n    // THIS FUNCTION INCREMENTS THE PLAYLIST SONG TO THE NEXT ONE\n    function incSong() {\n        currentSong++;\n        currentSong = currentSong % playlist.length;\n    }\n\n    function onPlayerReady(event) {\n        loadAndPlayCurrentSong(event.target);\n        event.target.playVideo();\n    }\n\n    // THIS IS OUR EVENT HANDLER FOR WHEN THE YOUTUBE PLAYER'S STATE\n    // CHANGES. NOTE THAT playerStatus WILL HAVE A DIFFERENT INTEGER\n    // VALUE TO REPRESENT THE TYPE OF STATE CHANGE. A playerStatus\n    // VALUE OF 0 MEANS THE SONG PLAYING HAS ENDED.\n    function onPlayerStateChange(event) {\n        let playerStatus = event.data;\n        let player = event.target;\n        if (playerStatus === -1) {\n            // VIDEO UNSTARTED\n            console.log(\"-1 Video unstarted\");\n        } else if (playerStatus === 0) {\n            // THE VIDEO HAS COMPLETED PLAYING\n            console.log(\"0 Video ended\");\n            incSong();\n            loadAndPlayCurrentSong(player);\n        } else if (playerStatus === 1) {\n            // THE VIDEO IS PLAYED\n            console.log(\"1 Video played\");\n        } else if (playerStatus === 2) {\n            // THE VIDEO IS PAUSED\n            console.log(\"2 Video paused\");\n        } else if (playerStatus === 3) {\n            // THE VIDEO IS BUFFERING\n            console.log(\"3 Video buffering\");\n        } else if (playerStatus === 5) {\n            // THE VIDEO HAS BEEN CUED\n            console.log(\"5 Video cued\");\n        }\n    }\n\n    return <YouTube\n        videoId={playlist[currentSong]}\n        opts={playerOptions}\n        onReady={onPlayerReady}\n        onStateChange={onPlayerStateChange} />;\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,kBAAkB,MAAM,aAAa;AAAA;AAE5C,eAAe,SAASC,oBAAoB,GAAG;EAAA;EAC3C,MAAM;IAAEC;EAAM,CAAC,GAAGJ,UAAU,CAACE,kBAAkB,CAAC;EAChD;EACA;EACA;EACA;;EAEA;EACA,IAAIG,QAAQ,GAAG,EAAE;EACjB,IAAGD,KAAK,CAACE,WAAW,KAAK,IAAI,EAAC;IAC1B,IAAIC,KAAK,GAAGH,KAAK,CAACE,WAAW,CAACC,KAAK;IACnC,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAC;MACjCH,QAAQ,CAACK,IAAI,CAACH,KAAK,CAACC,CAAC,CAAC,CAACG,SAAS,CAAC;IACrC;EACJ;;EAEA;EACA,IAAIC,WAAW,GAAG,CAAC;EAEnB,MAAMC,aAAa,GAAG;IAClBC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE;MACR;MACAC,QAAQ,EAAE;IACd;EACJ,CAAC;;EAED;EACA;EACA,SAASC,sBAAsB,CAACC,MAAM,EAAE;IACpC,IAAIC,IAAI,GAAGf,QAAQ,CAACO,WAAW,CAAC;IAChCO,MAAM,CAACE,aAAa,CAACD,IAAI,CAAC;IAC1BD,MAAM,CAACG,SAAS,EAAE;EACtB;;EAEA;EACA,SAASC,OAAO,GAAG;IACfX,WAAW,EAAE;IACbA,WAAW,GAAGA,WAAW,GAAGP,QAAQ,CAACI,MAAM;EAC/C;EAEA,SAASe,aAAa,CAACC,KAAK,EAAE;IAC1BP,sBAAsB,CAACO,KAAK,CAACC,MAAM,CAAC;IACpCD,KAAK,CAACC,MAAM,CAACJ,SAAS,EAAE;EAC5B;;EAEA;EACA;EACA;EACA;EACA,SAASK,mBAAmB,CAACF,KAAK,EAAE;IAChC,IAAIG,YAAY,GAAGH,KAAK,CAACI,IAAI;IAC7B,IAAIV,MAAM,GAAGM,KAAK,CAACC,MAAM;IACzB,IAAIE,YAAY,KAAK,CAAC,CAAC,EAAE;MACrB;MACAE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACrC,CAAC,MAAM,IAAIH,YAAY,KAAK,CAAC,EAAE;MAC3B;MACAE,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5BR,OAAO,EAAE;MACTL,sBAAsB,CAACC,MAAM,CAAC;IAClC,CAAC,MAAM,IAAIS,YAAY,KAAK,CAAC,EAAE;MAC3B;MACAE,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IACjC,CAAC,MAAM,IAAIH,YAAY,KAAK,CAAC,EAAE;MAC3B;MACAE,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IACjC,CAAC,MAAM,IAAIH,YAAY,KAAK,CAAC,EAAE;MAC3B;MACAE,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IACpC,CAAC,MAAM,IAAIH,YAAY,KAAK,CAAC,EAAE;MAC3B;MACAE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC/B;EACJ;EAEA,oBAAO,QAAC,OAAO;IACX,OAAO,EAAE1B,QAAQ,CAACO,WAAW,CAAE;IAC/B,IAAI,EAAEC,aAAc;IACpB,OAAO,EAAEW,aAAc;IACvB,aAAa,EAAEG;EAAoB;IAAA;IAAA;IAAA;EAAA,QAAG;AAC9C;AAAC,GAlFuBxB,oBAAoB;AAAA,KAApBA,oBAAoB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}