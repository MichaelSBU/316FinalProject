{"ast":null,"code":"var _jsxFileName = \"/Users/mikeybudney/Desktop/316FinalProject/client/src/auth/index.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport api from './auth-request-api';\nimport GlobalStoreContext from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n  GET_LOGGED_IN: \"GET_LOGGED_IN\",\n  LOGIN_USER: \"LOGIN_USER\",\n  LOGOUT_USER: \"LOGOUT_USER\",\n  REGISTER_USER: \"REGISTER_USER\"\n};\nfunction AuthContextProvider(props) {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [auth, setAuth] = useState({\n    user: null,\n    loggedIn: false,\n    errorMessage: null\n  });\n  const history = useHistory();\n  useEffect(() => {\n    auth.getLoggedIn();\n  }, []);\n  const authReducer = action => {\n    const {\n      type,\n      payload\n    } = action;\n    switch (type) {\n      case AuthActionType.GET_LOGGED_IN:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: payload.loggedIn,\n            errorMessage: null\n          });\n        }\n      case AuthActionType.LOGIN_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: payload.loggedIn,\n            errorMessage: payload.errorMessage\n          });\n        }\n      case AuthActionType.LOGOUT_USER:\n        {\n          return setAuth({\n            user: null,\n            loggedIn: false,\n            errorMessage: null\n          });\n        }\n      case AuthActionType.REGISTER_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: payload.loggedIn,\n            errorMessage: payload.errorMessage\n          });\n        }\n      default:\n        return auth;\n    }\n  };\n  auth.getLoggedIn = async function () {\n    const response = await api.getLoggedIn();\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.GET_LOGGED_IN,\n        payload: {\n          loggedIn: response.data.loggedIn,\n          user: response.data.user\n        }\n      });\n    }\n  };\n  auth.registerUser = async function (firstName, lastName, email, password, passwordVerify) {\n    console.log(\"REGISTERING USER\");\n    try {\n      const response = await api.registerUser(firstName, lastName, email, password, passwordVerify);\n      if (response.status === 200) {\n        console.log(\"Registered Sucessfully\");\n        authReducer({\n          type: AuthActionType.REGISTER_USER,\n          payload: {\n            user: response.data.user,\n            loggedIn: false,\n            errorMessage: null\n          }\n        });\n        history.push(\"/login\");\n        console.log(\"NOW WE LOGIN\");\n      }\n    } catch (error) {\n      authReducer({\n        type: AuthActionType.REGISTER_USER,\n        payload: {\n          user: auth.user,\n          loggedIn: false,\n          errorMessage: error.response.data.errorMessage\n        }\n      });\n    }\n  };\n  auth.loginUser = async function (email, password) {\n    if (email === \"guest\" && password === \"p\") {\n      authReducer({\n        type: AuthActionType.LOGIN_USER,\n        payload: {\n          user: \"guest\",\n          loggedIn: true,\n          errorMessage: null\n        }\n      });\n      history.push(\"/\");\n    } else {\n      try {\n        const response = await api.loginUser(email, password);\n        if (response.status === 200) {\n          authReducer({\n            type: AuthActionType.LOGIN_USER,\n            payload: {\n              user: response.data.user,\n              loggedIn: true,\n              errorMessage: null\n            }\n          });\n          history.push(\"/\");\n        }\n      } catch (error) {\n        authReducer({\n          type: AuthActionType.LOGIN_USER,\n          payload: {\n            user: auth.user,\n            loggedIn: false,\n            errorMessage: error.response.data.errorMessage\n          }\n        });\n      }\n    }\n  };\n  auth.logoutUser = async function () {\n    const response = await api.logoutUser();\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.LOGOUT_USER,\n        payload: null\n      });\n      history.push(\"/\");\n    }\n  };\n  auth.getUserInitials = function () {\n    let initials = \"\";\n    if (auth.user !== \"guest\" && auth.user !== null) {\n      initials += auth.user.firstName.charAt(0);\n      initials += auth.user.lastName.charAt(0);\n    }\n    console.log(\"user initials: \" + initials);\n    return initials;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthContextProvider, \"Dv4/bXsfQVnMJLdEMvZio/Vd7+Q=\", false, function () {\n  return [useHistory];\n});\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useContext","createContext","useEffect","useState","useHistory","api","GlobalStoreContext","AuthContext","console","log","AuthActionType","GET_LOGGED_IN","LOGIN_USER","LOGOUT_USER","REGISTER_USER","AuthContextProvider","props","store","auth","setAuth","user","loggedIn","errorMessage","history","getLoggedIn","authReducer","action","type","payload","response","status","data","registerUser","firstName","lastName","email","password","passwordVerify","push","error","loginUser","logoutUser","getUserInitials","initials","charAt","children"],"sources":["/Users/mikeybudney/Desktop/316FinalProject/client/src/auth/index.js"],"sourcesContent":["import React, { useContext, createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport api from './auth-request-api'\nimport GlobalStoreContext from '../store'\n\nconst AuthContext = createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\n    LOGIN_USER: \"LOGIN_USER\",\n    LOGOUT_USER: \"LOGOUT_USER\",\n    REGISTER_USER: \"REGISTER_USER\"\n}\n\nfunction AuthContextProvider(props) {\n    const {store} = useContext(GlobalStoreContext);\n    const [auth, setAuth] = useState({\n        user: null,\n        loggedIn: false,\n        errorMessage: null\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.getLoggedIn();\n    }, []);\n\n    const authReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            case AuthActionType.GET_LOGGED_IN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn,\n                    errorMessage: null\n                });\n            }\n            case AuthActionType.LOGIN_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn,\n                    errorMessage: payload.errorMessage\n                })\n            }\n            case AuthActionType.LOGOUT_USER: {\n                return setAuth({\n                    user: null,\n                    loggedIn: false,\n                    errorMessage: null\n                })\n            }\n            case AuthActionType.REGISTER_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn,\n                    errorMessage: payload.errorMessage\n                })\n            }\n            default:\n                return auth;\n        }\n    }\n\n    auth.getLoggedIn = async function () {\n        const response = await api.getLoggedIn();\n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.GET_LOGGED_IN,\n                payload: {\n                    loggedIn: response.data.loggedIn,\n                    user: response.data.user\n                }\n            });\n        }\n    }\n\n    auth.registerUser = async function(firstName, lastName, email, password, passwordVerify) {\n        console.log(\"REGISTERING USER\");\n        try{   \n            const response = await api.registerUser(firstName, lastName, email, password, passwordVerify);   \n            if (response.status === 200) {\n                console.log(\"Registered Sucessfully\");\n                authReducer({\n                    type: AuthActionType.REGISTER_USER,\n                    payload: {\n                        user: response.data.user,\n                        loggedIn: false,\n                        errorMessage: null\n                    }\n                })\n                history.push(\"/login\");\n                console.log(\"NOW WE LOGIN\");\n                \n            }\n        } catch(error){\n            authReducer({\n                type: AuthActionType.REGISTER_USER,\n                payload: {\n                    user: auth.user,\n                    loggedIn: false,\n                    errorMessage: error.response.data.errorMessage\n                }\n            })\n        }\n    }\n\n    auth.loginUser = async function(email, password) {\n        if(email === \"guest\" && password === \"p\"){\n            authReducer({\n                type: AuthActionType.LOGIN_USER,\n                payload: {\n                    user: \"guest\",\n                    loggedIn: true,\n                    errorMessage: null\n                }\n            })\n            history.push(\"/\");\n        } else {\n        try{\n            const response = await api.loginUser(email, password);\n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.LOGIN_USER,\n                    payload: {\n                        user: response.data.user,\n                        loggedIn: true,\n                        errorMessage: null\n                    }\n                })\n                history.push(\"/\");\n            }\n        } catch(error){\n            authReducer({\n                type: AuthActionType.LOGIN_USER,\n                payload: {\n                    user: auth.user,\n                    loggedIn: false,\n                    errorMessage: error.response.data.errorMessage\n                }\n            })\n        }\n    }\n    }\n\n    auth.logoutUser = async function() {\n        const response = await api.logoutUser();\n        if (response.status === 200) {\n            authReducer( {\n                type: AuthActionType.LOGOUT_USER,\n                payload: null\n            })\n            history.push(\"/\");\n        }\n    }\n\n    auth.getUserInitials = function() {\n        let initials = \"\";\n        if (auth.user !== \"guest\" && auth.user !== null) {\n            initials += auth.user.firstName.charAt(0);\n            initials += auth.user.lastName.charAt(0);\n        }\n        console.log(\"user initials: \" + initials);\n        return initials;\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            auth\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,kBAAkB,MAAM,UAAU;AAAA;AAEzC,MAAMC,WAAW,gBAAGN,aAAa,EAAE;AACnCO,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGF,WAAW,CAAC;;AAEjD;AACA,OAAO,MAAMG,cAAc,GAAG;EAC1BC,aAAa,EAAE,eAAe;EAC9BC,UAAU,EAAE,YAAY;EACxBC,WAAW,EAAE,aAAa;EAC1BC,aAAa,EAAE;AACnB,CAAC;AAED,SAASC,mBAAmB,CAACC,KAAK,EAAE;EAAA;EAChC,MAAM;IAACC;EAAK,CAAC,GAAGjB,UAAU,CAACM,kBAAkB,CAAC;EAC9C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC;IAC7BiB,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,KAAK;IACfC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF,MAAMC,OAAO,GAAGnB,UAAU,EAAE;EAE5BF,SAAS,CAAC,MAAM;IACZgB,IAAI,CAACM,WAAW,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAIC,MAAM,IAAK;IAC5B,MAAM;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGF,MAAM;IAChC,QAAQC,IAAI;MACR,KAAKjB,cAAc,CAACC,aAAa;QAAE;UAC/B,OAAOQ,OAAO,CAAC;YACXC,IAAI,EAAEQ,OAAO,CAACR,IAAI;YAClBC,QAAQ,EAAEO,OAAO,CAACP,QAAQ;YAC1BC,YAAY,EAAE;UAClB,CAAC,CAAC;QACN;MACA,KAAKZ,cAAc,CAACE,UAAU;QAAE;UAC5B,OAAOO,OAAO,CAAC;YACXC,IAAI,EAAEQ,OAAO,CAACR,IAAI;YAClBC,QAAQ,EAAEO,OAAO,CAACP,QAAQ;YAC1BC,YAAY,EAAEM,OAAO,CAACN;UAC1B,CAAC,CAAC;QACN;MACA,KAAKZ,cAAc,CAACG,WAAW;QAAE;UAC7B,OAAOM,OAAO,CAAC;YACXC,IAAI,EAAE,IAAI;YACVC,QAAQ,EAAE,KAAK;YACfC,YAAY,EAAE;UAClB,CAAC,CAAC;QACN;MACA,KAAKZ,cAAc,CAACI,aAAa;QAAE;UAC/B,OAAOK,OAAO,CAAC;YACXC,IAAI,EAAEQ,OAAO,CAACR,IAAI;YAClBC,QAAQ,EAAEO,OAAO,CAACP,QAAQ;YAC1BC,YAAY,EAAEM,OAAO,CAACN;UAC1B,CAAC,CAAC;QACN;MACA;QACI,OAAOJ,IAAI;IAAC;EAExB,CAAC;EAEDA,IAAI,CAACM,WAAW,GAAG,kBAAkB;IACjC,MAAMK,QAAQ,GAAG,MAAMxB,GAAG,CAACmB,WAAW,EAAE;IACxC,IAAIK,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACzBL,WAAW,CAAC;QACRE,IAAI,EAAEjB,cAAc,CAACC,aAAa;QAClCiB,OAAO,EAAE;UACLP,QAAQ,EAAEQ,QAAQ,CAACE,IAAI,CAACV,QAAQ;UAChCD,IAAI,EAAES,QAAQ,CAACE,IAAI,CAACX;QACxB;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EAEDF,IAAI,CAACc,YAAY,GAAG,gBAAeC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,cAAc,EAAE;IACrF7B,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,IAAG;MACC,MAAMoB,QAAQ,GAAG,MAAMxB,GAAG,CAAC2B,YAAY,CAACC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,cAAc,CAAC;MAC7F,IAAIR,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBtB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCgB,WAAW,CAAC;UACRE,IAAI,EAAEjB,cAAc,CAACI,aAAa;UAClCc,OAAO,EAAE;YACLR,IAAI,EAAES,QAAQ,CAACE,IAAI,CAACX,IAAI;YACxBC,QAAQ,EAAE,KAAK;YACfC,YAAY,EAAE;UAClB;QACJ,CAAC,CAAC;QACFC,OAAO,CAACe,IAAI,CAAC,QAAQ,CAAC;QACtB9B,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAE/B;IACJ,CAAC,CAAC,OAAM8B,KAAK,EAAC;MACVd,WAAW,CAAC;QACRE,IAAI,EAAEjB,cAAc,CAACI,aAAa;QAClCc,OAAO,EAAE;UACLR,IAAI,EAAEF,IAAI,CAACE,IAAI;UACfC,QAAQ,EAAE,KAAK;UACfC,YAAY,EAAEiB,KAAK,CAACV,QAAQ,CAACE,IAAI,CAACT;QACtC;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EAEDJ,IAAI,CAACsB,SAAS,GAAG,gBAAeL,KAAK,EAAEC,QAAQ,EAAE;IAC7C,IAAGD,KAAK,KAAK,OAAO,IAAIC,QAAQ,KAAK,GAAG,EAAC;MACrCX,WAAW,CAAC;QACRE,IAAI,EAAEjB,cAAc,CAACE,UAAU;QAC/BgB,OAAO,EAAE;UACLR,IAAI,EAAE,OAAO;UACbC,QAAQ,EAAE,IAAI;UACdC,YAAY,EAAE;QAClB;MACJ,CAAC,CAAC;MACFC,OAAO,CAACe,IAAI,CAAC,GAAG,CAAC;IACrB,CAAC,MAAM;MACP,IAAG;QACC,MAAMT,QAAQ,GAAG,MAAMxB,GAAG,CAACmC,SAAS,CAACL,KAAK,EAAEC,QAAQ,CAAC;QACrD,IAAIP,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UACzBL,WAAW,CAAC;YACRE,IAAI,EAAEjB,cAAc,CAACE,UAAU;YAC/BgB,OAAO,EAAE;cACLR,IAAI,EAAES,QAAQ,CAACE,IAAI,CAACX,IAAI;cACxBC,QAAQ,EAAE,IAAI;cACdC,YAAY,EAAE;YAClB;UACJ,CAAC,CAAC;UACFC,OAAO,CAACe,IAAI,CAAC,GAAG,CAAC;QACrB;MACJ,CAAC,CAAC,OAAMC,KAAK,EAAC;QACVd,WAAW,CAAC;UACRE,IAAI,EAAEjB,cAAc,CAACE,UAAU;UAC/BgB,OAAO,EAAE;YACLR,IAAI,EAAEF,IAAI,CAACE,IAAI;YACfC,QAAQ,EAAE,KAAK;YACfC,YAAY,EAAEiB,KAAK,CAACV,QAAQ,CAACE,IAAI,CAACT;UACtC;QACJ,CAAC,CAAC;MACN;IACJ;EACA,CAAC;EAEDJ,IAAI,CAACuB,UAAU,GAAG,kBAAiB;IAC/B,MAAMZ,QAAQ,GAAG,MAAMxB,GAAG,CAACoC,UAAU,EAAE;IACvC,IAAIZ,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACzBL,WAAW,CAAE;QACTE,IAAI,EAAEjB,cAAc,CAACG,WAAW;QAChCe,OAAO,EAAE;MACb,CAAC,CAAC;MACFL,OAAO,CAACe,IAAI,CAAC,GAAG,CAAC;IACrB;EACJ,CAAC;EAEDpB,IAAI,CAACwB,eAAe,GAAG,YAAW;IAC9B,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIzB,IAAI,CAACE,IAAI,KAAK,OAAO,IAAIF,IAAI,CAACE,IAAI,KAAK,IAAI,EAAE;MAC7CuB,QAAQ,IAAIzB,IAAI,CAACE,IAAI,CAACa,SAAS,CAACW,MAAM,CAAC,CAAC,CAAC;MACzCD,QAAQ,IAAIzB,IAAI,CAACE,IAAI,CAACc,QAAQ,CAACU,MAAM,CAAC,CAAC,CAAC;IAC5C;IACApC,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGkC,QAAQ,CAAC;IACzC,OAAOA,QAAQ;EACnB,CAAC;EAED,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MACzBzB;IACJ,CAAE;IAAA,UACGF,KAAK,CAAC6B;EAAQ;IAAA;IAAA;IAAA;EAAA,QACI;AAE/B;AAAC,GA9JQ9B,mBAAmB;EAAA,QAORX,UAAU;AAAA;AAAA,KAPrBW,mBAAmB;AAgK5B,eAAeR,WAAW;AAC1B,SAASQ,mBAAmB;AAAG;AAAA"},"metadata":{},"sourceType":"module"}