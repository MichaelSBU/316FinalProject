{"ast":null,"code":"var _jsxFileName = \"/Users/mikeybudney/Desktop/CSE316FINALPROJECT/client/src/components/YoutubePlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport YouTube from 'react-youtube';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport FastForwardIcon from '@mui/icons-material/FastForward';\nimport FastRewindIcon from '@mui/icons-material/FastRewind';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport GlobalStoreContext from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function YouTubePlayer() {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [p, setP] = useState(null);\n  const [song, setSong] = useState({\n    title: \"CHOOSE A PLAYLIST\",\n    artist: \"CHOOSE A PLAYLIST\"\n  });\n  const [currentSong, setCurrentSong] = useState(0);\n\n  // THIS HAS THE YOUTUBE IDS FOR THE SONGS IN OUR CURRENTLY PLAYING PLAYLIST\n  let name = \"SELECT A PLAYLIST TO PLAY IT!\";\n  let playlist = [];\n  let wholePlaylist = null;\n  if (store.playingList !== null) {\n    name = store.playingList.name;\n    wholePlaylist = store.playingList;\n    for (let i = 0; i < store.playingList.songs.length; i++) {\n      playlist.push(store.playingList.songs[i].youTubeId);\n    }\n  }\n  console.log(playlist);\n  const playerOptions = {\n    height: '390',\n    width: '670',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n\n  // THIS FUNCTION LOADS THE CURRENT SONG INTO\n  // THE PLAYER AND PLAYS IT\n  function loadAndPlayCurrentSong(player) {\n    let song = playlist[currentSong];\n    setSong({\n      title: wholePlaylist.songs[currentSong].title,\n      artist: wholePlaylist.songs[currentSong].artist\n    });\n    player.loadVideoById(null);\n    player.loadVideoById(song);\n    player.playVideo();\n  }\n  function onPlayerReady(event) {\n    if (store.playingList !== null) {\n      setP(event.target);\n      loadAndPlayCurrentSong(event.target);\n      p.playVideo();\n    }\n  }\n\n  // THIS IS OUR EVENT HANDLER FOR WHEN THE YOUTUBE PLAYER'S STATE\n  // CHANGES. NOTE THAT playerStatus WILL HAVE A DIFFERENT INTEGER\n  // VALUE TO REPRESENT THE TYPE OF STATE CHANGE. A playerStatus\n  // VALUE OF 0 MEANS THE SONG PLAYING HAS ENDED.\n  function onPlayerStateChange(event) {\n    if (store.playingList !== null) {\n      let playerStatus = event.data;\n      if (playerStatus === -1) {\n        // VIDEO UNSTARTED\n        console.log(\"-1 Video unstarted\");\n      } else if (playerStatus === 0) {\n        // THE VIDEO HAS COMPLETED PLAYING\n        handleNextSong();\n      } else if (playerStatus === 1) {\n        // THE VIDEO IS PLAYED\n        console.log(\"1 Video played\");\n      } else if (playerStatus === 2) {\n        // THE VIDEO IS PAUSED\n        console.log(\"2 Video paused\");\n      } else if (playerStatus === 3) {\n        // THE VIDEO IS BUFFERING\n        console.log(\"3 Video buffering\");\n      } else if (playerStatus === 5) {\n        // THE VIDEO HAS BEEN CUED\n        console.log(\"5 Video cued\");\n      }\n    }\n  }\n  const handlePrevSong = () => {\n    if (store.playingList !== null) {\n      setCurrentSong((playlist.length + currentSong - 1) % playlist.length);\n      setSong({\n        title: wholePlaylist.songs[currentSong].title,\n        artist: wholePlaylist.songs[currentSong].artist\n      });\n      loadAndPlayCurrentSong(p);\n      p.playVideo();\n    }\n  };\n  const handlePauseSong = () => {\n    if (store.playingList != null) {\n      console.log(\"Paused Video\");\n      p.pauseVideo();\n    }\n  };\n  const handlePlaySong = () => {\n    if (store.playingList !== null) {\n      console.log(\"Play Video\");\n      p.playVideo();\n    }\n  };\n  const handleNextSong = () => {\n    if (store.playingList !== null) {\n      setCurrentSong((currentSong + 1) % playlist.length);\n      setSong({\n        title: wholePlaylist.songs[currentSong].title,\n        artist: wholePlaylist.songs[currentSong].artist\n      });\n      loadAndPlayCurrentSong(p);\n      p.playVideo();\n    }\n  };\n  let songNumb = \"CHOOSE A PLAYLIST\";\n  if (store.playingList !== null) {\n    songNumb = currentSong + 1;\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      transform: \"translate(0%,1%)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: playlist[currentSong],\n      opts: playerOptions,\n      onReady: onPlayerReady,\n      onStateChange: onPlayerStateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        pb: 1.5,\n        transform: \"translate(0%, -3%)\",\n        height: \"100%\",\n        borderRadius: \"12px\",\n        border: 1,\n        bgcolor: \"#cdccff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: \"40%\",\n          fontSize: 25\n        },\n        children: \"Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: \"20px\",\n          fontSize: 25\n        },\n        children: \"Playlist: \" + name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: \"20px\",\n          fontSize: 25\n        },\n        children: \"Song #: \" + songNumb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: \"20px\",\n          fontSize: 25\n        },\n        children: \"Title:   \" + song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: \"20px\",\n          fontSize: 25\n        },\n        children: \"Artist:   \" + song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          border: 2,\n          height: \"75px\",\n          borderColor: \"black\",\n          borderRadius: 5,\n          ml: \"3%\",\n          width: \"94%\",\n          bgcolor: \"white\",\n          fontSize: \"75px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FastRewindIcon, {\n          onClick: handlePrevSong,\n          sx: {\n            ml: \"30%\"\n          },\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(PauseIcon, {\n          onClick: handlePauseSong,\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n          onClick: handlePlaySong,\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(FastForwardIcon, {\n          onClick: handleNextSong,\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 12\n  }, this);\n}\n_s(YouTubePlayer, \"ILlAOzWaCwLMok75LiT3R4Lhdf8=\");\n_c = YouTubePlayer;\nvar _c;\n$RefreshReg$(_c, \"YouTubePlayer\");","map":{"version":3,"names":["React","useContext","useState","YouTube","Box","Typography","FastForwardIcon","FastRewindIcon","PauseIcon","PlayArrowIcon","GlobalStoreContext","YouTubePlayer","store","p","setP","song","setSong","title","artist","currentSong","setCurrentSong","name","playlist","wholePlaylist","playingList","i","songs","length","push","youTubeId","console","log","playerOptions","height","width","playerVars","autoplay","loadAndPlayCurrentSong","player","loadVideoById","playVideo","onPlayerReady","event","target","onPlayerStateChange","playerStatus","data","handleNextSong","handlePrevSong","handlePauseSong","pauseVideo","handlePlaySong","songNumb","transform","pb","borderRadius","border","bgcolor","ml","fontSize","borderColor"],"sources":["/Users/mikeybudney/Desktop/CSE316FINALPROJECT/client/src/components/YoutubePlayer.js"],"sourcesContent":["import React, {useContext, useState} from 'react';\nimport YouTube from 'react-youtube';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport FastForwardIcon from '@mui/icons-material/FastForward';\nimport FastRewindIcon from '@mui/icons-material/FastRewind';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport GlobalStoreContext from '../store'\n\nexport default function YouTubePlayer() {\n    \n    const {store} = useContext(GlobalStoreContext);\n    \n    const [p, setP] = useState(null);\n    const [song, setSong] = useState({title: \"CHOOSE A PLAYLIST\", artist: \"CHOOSE A PLAYLIST\"});\n    const [currentSong, setCurrentSong] = useState(0);\n\n    // THIS HAS THE YOUTUBE IDS FOR THE SONGS IN OUR CURRENTLY PLAYING PLAYLIST\n    let name = \"SELECT A PLAYLIST TO PLAY IT!\"\n    let playlist = [];\n    let wholePlaylist = null;\n    if(store.playingList !== null){\n        name = store.playingList.name;\n        wholePlaylist = store.playingList;\n        for(let i = 0; i < store.playingList.songs.length; i++){\n            playlist.push(store.playingList.songs[i].youTubeId);\n        }\n    }\n    console.log(playlist);\n\n    const playerOptions = {\n        height: '390',\n        width: '670',\n        playerVars: {\n            // https://developers.google.com/youtube/player_parameters\n            autoplay: 0,\n        },\n    };\n\n    // THIS FUNCTION LOADS THE CURRENT SONG INTO\n    // THE PLAYER AND PLAYS IT\n    function loadAndPlayCurrentSong(player) {\n        let song = playlist[currentSong];\n        setSong({title: wholePlaylist.songs[currentSong].title, artist: wholePlaylist.songs[currentSong].artist});\n        player.loadVideoById(null);\n        player.loadVideoById(song);\n        player.playVideo();\n    }\n\n    function onPlayerReady(event) {\n        if(store.playingList !== null){\n        setP(event.target);\n        loadAndPlayCurrentSong(event.target);\n        p.playVideo();\n        }\n    }\n\n    // THIS IS OUR EVENT HANDLER FOR WHEN THE YOUTUBE PLAYER'S STATE\n    // CHANGES. NOTE THAT playerStatus WILL HAVE A DIFFERENT INTEGER\n    // VALUE TO REPRESENT THE TYPE OF STATE CHANGE. A playerStatus\n    // VALUE OF 0 MEANS THE SONG PLAYING HAS ENDED.\n    function onPlayerStateChange(event) {\n        if(store.playingList !== null){\n        let playerStatus = event.data;\n        if (playerStatus === -1) {\n            // VIDEO UNSTARTED\n            console.log(\"-1 Video unstarted\");\n        } else if (playerStatus === 0) {\n            // THE VIDEO HAS COMPLETED PLAYING\n            handleNextSong();\n        } else if (playerStatus === 1) {\n            // THE VIDEO IS PLAYED\n            console.log(\"1 Video played\");\n        } else if (playerStatus === 2) {\n            // THE VIDEO IS PAUSED\n            console.log(\"2 Video paused\");\n        } else if (playerStatus === 3) {\n            // THE VIDEO IS BUFFERING\n            console.log(\"3 Video buffering\");\n        } else if (playerStatus === 5) {\n            // THE VIDEO HAS BEEN CUED\n            console.log(\"5 Video cued\");\n        }\n    }\n}\n\n    const handlePrevSong = () => {\n        if(store.playingList !== null){\n        setCurrentSong((playlist.length+currentSong-1) % playlist.length);\n        setSong({title: wholePlaylist.songs[currentSong].title, artist: wholePlaylist.songs[currentSong].artist});\n        loadAndPlayCurrentSong(p);\n        p.playVideo();\n        }\n    }\n    const handlePauseSong = () => {\n        if(store.playingList != null){\n        console.log(\"Paused Video\")\n        p.pauseVideo();\n        }\n    }\n    const handlePlaySong = () => {\n        if(store.playingList !== null){\n        console.log(\"Play Video\")\n        p.playVideo();\n        }\n    }\n    const handleNextSong = () => {\n        if(store.playingList !== null){\n        setCurrentSong((currentSong+1) % playlist.length);\n        setSong({title: wholePlaylist.songs[currentSong].title, artist: wholePlaylist.songs[currentSong].artist});\n        loadAndPlayCurrentSong(p);\n        p.playVideo();\n        }\n    }\n    let songNumb = \"CHOOSE A PLAYLIST\"\n    if(store.playingList !== null){\n        songNumb = (currentSong+1);\n    }\n    return <Box sx={{transform:\"translate(0%,1%)\"}}>\n    <YouTube videoId={playlist[currentSong]} opts={playerOptions} onReady={onPlayerReady} onStateChange={onPlayerStateChange}></YouTube>\n    <Box sx={{pb: 1.5, transform:\"translate(0%, -3%)\", height: \"100%\", borderRadius:\"12px\", border: 1,  bgcolor:\"#cdccff\"}}>\n                                    <Typography sx={{ml:\"40%\", fontSize:25}}>Now Playing</Typography>\n                                    <Typography sx={{ml:\"20px\", fontSize:25}}>{\"Playlist: \" + name}</Typography>\n                                    <Typography sx={{ml:\"20px\", fontSize:25}}>{\"Song #: \" + songNumb}</Typography>\n                                    <Typography sx={{ml:\"20px\", fontSize:25}}>{\"Title:   \" + song.title}</Typography>\n                                    <Typography sx={{ml:\"20px\", fontSize:25}}>{\"Artist:   \" + song.artist}</Typography>\n                                    <Box sx={{border:2, height:\"75px\", borderColor:\"black\", borderRadius:5, ml:\"3%\", width:\"94%\", bgcolor:\"white\", fontSize:\"75px\"}}>\n                                        <FastRewindIcon onClick={handlePrevSong} sx={{ml: \"30%\"}} fontSize=\"inherit\"></FastRewindIcon>\n                                        <PauseIcon onClick={handlePauseSong} fontSize=\"inherit\"></PauseIcon>\n                                        <PlayArrowIcon onClick={handlePlaySong} fontSize=\"inherit\"></PlayArrowIcon>\n                                        <FastForwardIcon onClick={handleNextSong} fontSize=\"inherit\"></FastForwardIcon>\n                                    </Box>\n                                    \n    </Box>\n    </Box>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}